{"version":3,"sources":["features/auth/login/ui/Login.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/Header/Header.module.css","main/ui/Header/error404/Error404.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","features/packs/ui/Packs.module.css","features/cards/ui/Cards.module.css","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","features/auth/registration/ui/Registration.module.css","main/ui/Routes.module.css","features/test/ui/Test.module.css","main/ui/common/c4-Paginator/Paginator.module.css","main/ui/Header/error404/Error404.tsx","features/profile/ui/Profile.tsx","main/dal/instance.ts","features/new-password/dal/api-password.tsx","features/reset-password/bll/reset-password-reducer.ts","main/ui/common/c2-SuperButton/SuperButton.tsx","features/reset-password/ui/ResetPassword.tsx","features/new-password/bll/new-password-reducer.ts","features/new-password/ui/NewPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","features/test/ui/Test.tsx","features/packs/dal/packs-api.ts","features/packs/bll/packs-reducer.ts","main/ui/common/c5-Search/Search.tsx","features/packs/pack/Pack.tsx","main/ui/common/c4-Paginator/Paginator.tsx","features/packs/ui/Packs.tsx","features/cards/dal/cards-api.ts","features/cards/bll/cards-reducer.ts","features/cards/ui/Card/Card.tsx","features/cards/ui/Cards.tsx","features/auth/login/ui/Login.tsx","features/auth/login/dal/login-api.ts","features/auth/login/bll/auth-reducer.ts","features/auth/login/ui/LoginContainer.tsx","features/auth/registration/dal/registration-api.ts","features/auth/registration/bll/registration-reducer.ts","features/auth/registration/ui/Registration.tsx","features/auth/registration/ui/RegistrationContainer.tsx","main/ui/Routes.tsx","features/auth/login/ui/logaut/Logout.tsx","main/ui/Header/Navbar/Navbar.tsx","main/ui/Header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","features/profile/bll/profile-reducer.ts","features/test/bll/test-reducer.ts","main/bll/store.ts","index.tsx","main/ui/Header/Navbar/Navbar.module.css"],"names":["module","exports","Error404","className","classes","messageContainer","mainImage","src","alt","errorText","Profile","instance","axios","create","withCredentials","baseURL","passwordAPI","email","post","from","message","then","res","data","password","resetPasswordToken","response","initialState","SuperButton","red","restProps","finalClassName","s","buttonStyle","default","ResetPassword","props","useState","newPassword","setNewPassword","repeatNewPassword","setRepeatNewPassword","dispatch","useDispatch","token","useParams","isNewPassword","useSelector","state","resetPassword","tokenName","to","PATH","LOGIN","formContainer","type","onChange","e","currentTarget","value","onClick","catch","console","log","error","setNewPasswordTC","alert","text","NewPassword","isForgot","isRecoveryPassword","setIsRecoveryPassword","RESET_PASSWORD","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","placeholder","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","styles","container","packsAPI","packName","min","max","sortPacks","page","pageCount","get","params","cardsPack","name","_id","put","id","delete","packsList","cardPacksTotalCount","fetchPacksTC","cardPacks","Search","inputValue","setInputValue","setFilteredResults","Pack","pack","cardsCount","updated","updatePack","deletePack","CARDS","Paginator","totalItemsCount","pageSize","onPageChanged","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionsCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","p","map","pageNumber","Packs","packs","useEffect","updatePackTC","deletePackTC","style","filtersContainer","SetPacksSearchTermAC","setPageAC","tableContainer","tableHeaders","addPackTC","cardsAPI","cardAnswer","cardQuestion","cardsPack_id","sortCards","cardsList","minGrade","maxGrade","cardsTotalCount","Card","card","question","answer","grade","Cards","cards","cardsPackId","packId","fetchCardsTC","c","Login","onChangeHandlerEmail","onChangeHandlerPassword","onChangeHandlerRememberMe","onClickHandler","loginAPI","rememberMe","user","isLogin","setLoginAC","payload","setError","LoginContainer","setEmail","setPassword","setRememberMe","login","useCallback","PROFILE","REGISTRATION","registrationAPI","isRegistered","Registration","onEmailChange","onPasswordChange","registerUser","RegistrationContainer","registration","getState","SetErrorAC","RegisterUserTC","NEW_PASSWORD","TEST","PACKS","Routes","mainContainer","path","exact","render","Logout","info","Navbar","onClickItem","setCollapsed","isCollapsed","hidden","menuContainer","menuItem","activeClassName","highlight","Header","navbarContainer","menuIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","test","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcfe6ac5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Login_formContainer__xmjrT\",\"error\":\"Login_error__2y0c1\",\"text\":\"Login_text__odKnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3QRpP\",\"superInput\":\"SuperInputText_superInput__DObQ2\",\"errorInput\":\"SuperInputText_errorInput__2P0oJ\",\"error\":\"SuperInputText_error__3CW9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Header_navbarContainer__13W0V\",\"menuIcon\":\"Header_menuIcon__3qbmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Error404_messageContainer__1oLIs\",\"mainImage\":\"Error404_mainImage__JOjhT\",\"errorText\":\"Error404_errorText__2-ONF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"SuperButton_buttonStyle__12fCK\",\"default\":\"SuperButton_default__x039A\",\"red\":\"SuperButton_red__3gcyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Packs_tableContainer__3iRzx\",\"filtersContainer\":\"Packs_filtersContainer__2k_cK\",\"tableHeaders\":\"Packs_tableHeaders__2Q3HI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Cards_tableContainer__1O9ff\",\"filtersContainer\":\"Cards_filtersContainer__2E9y9\",\"tableHeaders\":\"Cards_tableHeaders__1Hl9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1PcEC\",\"spanClassName\":\"SuperCheckbox_spanClassName__zg_Y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Registration_formContainer__135lz\",\"error\":\"Registration_error__1kraY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Routes_mainContainer__2FFxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Test_container__1vEu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__2tpWq\"};","import React from \"react\";\nimport classes from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div>\n            <div className={classes.messageContainer}>\n                <img className={classes.mainImage} src=\"https://svgsilh.com/svg/1298794.svg\" alt=\"cat\"/>\n                <div className={classes.errorText}>\n                    <h1>Ooooops...</h1>\n                    <h2>404</h2>\n                    <h3>Page not found :(</h3>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\n\nfunction Profile() {\n    return (\n        <div>\n            Profile\n        </div>\n    );\n}\n\nexport default Profile;\n","import axios from \"axios\";\n\nexport const instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\n    // baseURL: 'http://localhost:7542/2.0/'\n})\n","import {instance} from \"../../../main/dal/instance\";\n\nexport const passwordAPI = {\n    recoveryPassword(email: string) {\n        return instance.post<{ info: string, error?: string }>('auth/forgot', {\n            email: email,\n            from: 'test-front-admin <olkaaamartynova@gmail.com>',\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\n                            password recovery link: \n                     <a href='http://localhost:3000/Cards?#/new-password/$token$'>Click</a>\n                     </div>`\n        })\n            .then(res => res.data)\n    },\n    resetPassword(password: string, resetPasswordToken: string) {\n        return instance.post<{ info: string, error?: string }>\n        ('auth/set-new-password', {password, resetPasswordToken})\n            .then(response => response.data)\n    }\n}\n","import {setRecoveryPassword} from \"../../new-password/bll/new-password-reducer\";\nimport {Dispatch} from \"redux\";\nimport {passwordAPI} from \"../../new-password/dal/api-password\";\n\nexport const SET_RESET_PASSWORD = 'SET-RESET-PASSWORD';\n\n\ntype ActionsType = ReturnType<typeof setResetPassword>\ntype ResetPasswordStateType = {\n    isNewPassword: boolean\n}\nconst initialState = {} as ResetPasswordStateType\n\nexport const resetPasswordReducer = (state: ResetPasswordStateType = initialState, action: ActionsType): ResetPasswordStateType => {\n    switch (action.type) {\n        case \"SET-RESET-PASSWORD\":\n            return {\n                ...state,\n                isNewPassword: action.isNewPassword\n            }\n        default:\n            return state;\n    }\n}\nexport const setResetPassword = (isNewPassword: boolean) => ({\n    type: SET_RESET_PASSWORD,\n    isNewPassword\n} as const)\n\nexport const setNewPasswordTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    passwordAPI.resetPassword(password, token)\n        .then(() => {\n            dispatch(setResetPassword(true))\n        })\n        .catch(res => {\n            console.log(res.error)\n        })\n}\n\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${s.buttonStyle} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}/>\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setNewPasswordTC, setResetPassword} from \"../bll/reset-password-reducer\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {NavLink, Redirect, RouteComponentProps, useParams} from \"react-router-dom\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport s from \"../../auth/login/ui/Login.module.css\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\n/*\ntype PathParamsType = {\n    token: string\n}\ntype PropsType = RouteComponentProps<PathParamsType>\n*/\n\nconst ResetPassword: React.FC = (props) => {\n    const [newPassword, setNewPassword] = useState<string>('')\n    const [repeatNewPassword, setRepeatNewPassword] = useState<string>(\"\")\n    const dispatch = useDispatch()\n    const {token} = useParams<Record<string, string>>();\n    const isNewPassword = useSelector<AppRootStateType, boolean>(state => state.resetPassword.isNewPassword)\n    const tokenName = token ? token : ''\n    const onChangeNewPassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewPassword(e.currentTarget.value)\n    }\n    const onChangeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setRepeatNewPassword(e.currentTarget.value)\n    }\n    const onClickNewPassword = () => {\n        if (newPassword === repeatNewPassword) {\n            dispatch(setNewPasswordTC(newPassword, tokenName))\n        } else {\n            alert('Password mismatch')\n        }\n    }\n    if (isNewPassword) {\n        return <Redirect to={PATH.LOGIN}/>}\n    return (\n        <div className={s.formContainer}>\n            <div>Reset Password</div>\n            <form><input type={'password'} onChange={onChangeNewPassword}/>\n                <input type={'password'} onChange={onChangeRepeatPassword}/>\n                <div>\n                    <div><SuperButton onClick={onClickNewPassword}>Send</SuperButton></div>\n                </div>\n            </form>\n            <div>\n                <NavLink className={s.text} to={PATH.LOGIN}>Login</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default ResetPassword;\n\n","import {AppThunk} from \"../../../main/bll/store\";\nimport {passwordAPI} from \"../dal/api-password\";\nimport {Dispatch} from \"redux\";\n\nexport const SET_RECOVERY_PASSWORD = 'SET-RECOVERY-PASSWORD';\n\n\ntype ActionsType = ReturnType<typeof setRecoveryPassword>\ntype NewPasswordStateType = {\n    isForgot: boolean\n}\nconst initialState = {} as NewPasswordStateType\n\nexport const newPasswordReducer = (state: NewPasswordStateType = initialState, action: ActionsType): NewPasswordStateType => {\n    switch (action.type) {\n        case \"SET-RECOVERY-PASSWORD\":\n            return {\n                ...state,\n                isForgot: action.isForgot\n            }\n        default:\n            return state;\n    }\n}\nexport const setRecoveryPassword = (isForgot: boolean) => ({\n    type: SET_RECOVERY_PASSWORD,\n    isForgot\n}as const)\n\nexport const recoveryPasswordTC = (email: string) => (dispatch: Dispatch) => {\n    passwordAPI.recoveryPassword(email)\n        .then(() => {\n            dispatch(setRecoveryPassword(true))\n        })\n        .catch(res => {\n            console.log(res.error)\n        })\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {recoveryPasswordTC} from \"../bll/new-password-reducer\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport s from \"../../auth/login/ui/Login.module.css\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\n\nfunction NewPassword() {\n    const isForgot = useSelector<AppRootStateType, boolean>(state => state.newPassword.isForgot)\n    const [isRecoveryPassword, setIsRecoveryPassword] = useState<string>('')\n    const dispatch = useDispatch();\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setIsRecoveryPassword(e.currentTarget.value)\n    }\n    const sendEmail = () => {\n        dispatch(recoveryPasswordTC(isRecoveryPassword))\n    }\n    if (isForgot) {\n        return <Redirect to={PATH.RESET_PASSWORD}/>\n    }\n    return (\n        <div className={s.formContainer}>\n            <form>\n                <span>Email:</span>\n                <div><input type={'email'} onChange={onChangePasswordHandler}/>\n                </div>\n                <div>\n                    <div><SuperButton onClick={sendEmail}>Send</SuperButton></div>\n                </div>\n            </form>\n            <div>\n                <NavLink className={s.text} to={PATH.LOGIN}>Login</NavLink>\n            </div>\n        </div>\n\n    );\n}\n\nexport default NewPassword;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    placeholder?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName, placeholder,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e);\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\"\n        && onEnter\n        && onEnter();\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput  }`;\n\n    return (\n        <>\n            <input\n                type={type ? type : \"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                placeholder={placeholder}\n\n                {...restProps}\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked2: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type,\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\nimport SuperInputText from \"../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../../main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\nimport styles from './Test.module.css'\n\nfunction Test() {\n    return (\n        <div className={styles.container}>\n           <SuperInputText />\n            <SuperButton>Click me </SuperButton>\n           <SuperCheckbox />\n        </div>\n    );\n}\n\nexport default Test;\n","import {PackType} from \"../bll/packs-reducer\";\nimport {instance} from \"../../../main/dal/instance\";\n\nexport const packsAPI = {\n    fetchPacks(packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) {\n        return instance.get<ResponseType>('cards/pack', {params: {packName, min, max, sortPacks, page, pageCount}});\n    },\n    addPack() {\n        return instance.post('cards/pack', {cardsPack: {name: \"Testik 2\", type: \"pack\"}})\n    },\n    updatePack(_id: string) {\n        return instance.put('cards/pack', {cardsPack: {_id, name: \"Testik 2 changed\"}})\n    },\n    deletePack(id: string) {\n        return instance.delete('cards/pack', {params: {id}})\n    }\n}\n\ntype ResponseType = {\n    cardPacks: Array<PackType>\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n    token: string\n    tokenDeathTime: number\n}\n","import {packsAPI} from \"../dal/packs-api\";\n\nexport type PackType = {\n    cardsCount: number\n    created: string\n    deckCover: null | string\n    grade: number\n    more_id: string\n    name: string\n    path: string\n    private: boolean\n    rating: number\n    shots: number\n    type: string\n    updated: string\n    user_id: string\n    user_name: string\n    __v: number\n    _id: string\n}\ntype PacksStateType = {\n    packName: string\n    packsList: Array<PackType>\n    min: number\n    max: number\n    sortPacks: number\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n}\nconst initialState: PacksStateType = {\n    packName : \"\",\n    packsList : [],\n    min : 0,\n    max : 50,\n    sortPacks : 0,\n    page : 1,\n    pageCount : 10,\n    cardPacksTotalCount : 0\n}\n\nexport const packsReducer = (state: PacksStateType = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case \"SET_PACKS\":\n            return {...state, packsList : action.packsList}\n        case \"SET_PACKS_SEARCH_TERM\":\n            return {...state, packName : action.packName}\n        case \"SET_CARD_PACKS_TOTAL_COUNT\":\n            return {...state, cardPacksTotalCount : action.cardPacksTotalCount}\n        case \"SET_PAGE\": return {...state, page: action.page}\n        default:\n            return state;\n    }\n}\n// Actions\n\nexport const setPacksListAC = (packsList: Array<PackType>): SetPacksListActionType => ({\n    type : \"SET_PACKS\", packsList\n} as const)\nexport const SetPacksSearchTermAC = (packName: string): SetPacksSearchTermActionType => ({\n    type : 'SET_PACKS_SEARCH_TERM',\n    packName\n} as const)\nexport const setCardPacksTotalCountAC = (cardPacksTotalCount: number): SetCardPacksTotalCountActionType => ({\n    type : 'SET_CARD_PACKS_TOTAL_COUNT', cardPacksTotalCount\n} as const)\nexport const setPageAC = (page: number): SetPageActionType => ({\n    type : 'SET_PAGE', page\n} as const)\n// TC\n\nexport const fetchPacksTC = (packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) => (dispatch: any) => {\n    packsAPI.fetchPacks(packName, min, max, sortPacks, page, pageCount).then((res) => {\n        dispatch(setPacksListAC(res.data.cardPacks))\n        dispatch(setCardPacksTotalCountAC(res.data.cardPacksTotalCount))\n    })\n}\n\nexport const addPackTC = (packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) => (dispatch: any) => {\n    packsAPI.addPack().then(() => {\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n    })\n}\n\nexport const updatePackTC = (id: string, packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) => (dispatch: any) => {\n    packsAPI.updatePack(id).then(() => {\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n    })\n}\n\nexport const deletePackTC = (id: string, packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) => (dispatch: any) => {\n    packsAPI.deletePack(id).then(() => {\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n    })\n}\n\n// Types\nexport type SetPacksSearchTermActionType = {\n    type: 'SET_PACKS_SEARCH_TERM',\n    packName: string\n}\nexport type SetPacksListActionType = {\n    type: 'SET_PACKS',\n    packsList: Array<PackType>\n}\n\nexport type SetCardPacksTotalCountActionType = {\n    type: 'SET_CARD_PACKS_TOTAL_COUNT',\n    cardPacksTotalCount: number\n}\n\nexport type SetPageActionType = {\n    type: 'SET_PAGE',\n    page: number\n}\ntype ActionsType =\n    | SetPacksSearchTermActionType\n    | SetPacksListActionType\n    | SetCardPacksTotalCountActionType\n    | SetPageActionType\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../c2-SuperButton/SuperButton\";\nimport {useDispatch} from \"react-redux\";\nimport {SetPacksSearchTermAC} from \"../../../../features/packs/bll/packs-reducer\";\n\ntype SearchPropsType = {\n    setFilteredResults: (packName: string) => void\n};\n\nconst Search: React.FC<SearchPropsType> = (props) => {\n    const dispatch = useDispatch()\n    const [inputValue, setInputValue] = useState(\"\")\n    const setSearchTerm = () => {\n        props.setFilteredResults(inputValue)\n    }\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            <SuperInputText placeholder={\"Type name\"} onChange={onChangeCallback}/>\n            <SuperButton onClick={setSearchTerm}>Search</SuperButton>\n        </div>\n    );\n}\n\nexport default Search;\n","import React from \"react\";\nimport {PackType} from \"../bll/packs-reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"../../../main/ui/Routes\";\nimport {useDispatch} from \"react-redux\";\n\ntype PackPropsType = {\n    pack: PackType\n    updatePack: (id: string) => void\n    deletePack: (id: string) => void\n}\n\nconst Pack: React.FC<PackPropsType> = (props) => {\n    const dispatch = useDispatch()\n    const onUpdateClick = () => {\n        props.updatePack(props.pack._id)\n    }\n    const onDeleteClick = () => {\n        props.deletePack(props.pack._id)\n    }\n\n    return (\n        <>\n            <tr>\n                <td>{props.pack.name}</td>\n                <td>{props.pack.cardsCount}</td>\n                <td>{props.pack.updated}</td>\n                <button onClick={onUpdateClick}>update</button>\n                <button onClick={onDeleteClick}>delete</button>\n                <NavLink\n                         to={`${PATH.CARDS}/${props.pack._id}`}\n                         >cards</NavLink>\n            </tr>\n\n        </>\n    );\n}\n\nexport default Pack;\n","import React, {useState} from \"react\";\nimport s from \"./Paginator.module.css\";\n\ntype PaginatorPropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (currentPage: number) => void\n    portionSize: number\n}\n\nconst Paginator: React.FC<PaginatorPropsType> = (\n    {\n        totalItemsCount,\n        pageSize ,\n        currentPage,\n        onPageChanged,\n        portionSize,\n        ...restProps\n    }\n\n) => {\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\n    const pages = []\n    for (let i = 1; i <= pagesCount; i ++) {\n        pages.push(i)\n    }\n\n    const portionsCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionNumber = portionNumber * portionSize;\n\n    return (\n        <div>\n            {portionNumber > 1 &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>Previous</button>\n            }\n            {\n                pages.filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\n                    .map((p) => {\n                        return <span className={s.pageNumber}\n                                     key={p}\n                                     onClick={(e) => onPageChanged(p)}>{p}</span>\n                    })\n            }\n            {portionNumber < portionsCount &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>Next</button>}\n        </div>\n    );\n}\n\nexport default Paginator;\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {\n    addPackTC,\n    deletePackTC,\n    fetchPacksTC,\n    PackType,\n    SetPacksSearchTermAC,\n    setPageAC,\n    updatePackTC\n} from \"../bll/packs-reducer\";\nimport Search from \"../../../main/ui/common/c5-Search/Search\";\nimport Pack from \"../pack/Pack\";\nimport style from \"./Packs.module.css\"\nimport Paginator from \"../../../main/ui/common/c4-Paginator/Paginator\";\n\nconst Packs = () => {\n    const dispatch = useDispatch()\n    const packs = useSelector<AppRootStateType, Array<PackType>>((state) => state.packs.packsList)\n    const packName = useSelector<AppRootStateType, string>((state) => state.packs.packName)\n    const page = useSelector<AppRootStateType, number>((state) => state.packs.page)\n    const pageCount = useSelector<AppRootStateType, number>((state) => state.packs.pageCount)\n    const min = useSelector<AppRootStateType, number>((state) => state.packs.min)\n    const max = useSelector<AppRootStateType, number>((state) => state.packs.max)\n    const sortPacks = useSelector<AppRootStateType, number>((state) => state.packs.sortPacks)\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>((state) => state.packs.cardPacksTotalCount)\n\n    useEffect(() => {\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n    }, [])\n\n    const setFilteredResults = (packName: string) => {\n        dispatch(SetPacksSearchTermAC(packName))\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n\n    }\n    const setPage = (page: number) => {\n        dispatch(setPageAC(page))\n        dispatch(fetchPacksTC(packName, min, max, sortPacks, page, pageCount))\n    }\n\n    const addPack = () => {\n        dispatch(addPackTC(packName, min, max, sortPacks, page, pageCount))\n    }\n    const updatePack = (id: string) => {\n        dispatch(updatePackTC(id, packName, min, max, sortPacks, page, pageCount))\n    }\n    const deletePack = (id: string) => {\n        dispatch(deletePackTC(id, packName, min, max, sortPacks, page, pageCount))\n    }\n\n    return (\n        <div>\n            <h2>Packs</h2>\n            <div className={style.filtersContainer}>\n                <Search setFilteredResults={setFilteredResults}/>\n                <Paginator totalItemsCount={cardPacksTotalCount}\n                           pageSize={pageCount}\n                           currentPage={page}\n                           onPageChanged={setPage}\n                           portionSize={10}\n                />\n            </div>\n            <table className={style.tableContainer}>\n                <tr className={style.tableHeaders}>\n                    <td>Name</td>\n                    <td>Cards Count</td>\n                    <td>Updated</td>\n                    <button onClick={addPack}>Add</button>\n                </tr>\n                {packs.map((p) => {\n                    return <Pack key={p._id}\n                                 pack={p}\n                                 updatePack={updatePack}\n                                 deletePack={deletePack}\n                    />\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default Packs;\n","import {instance} from \"../../../main/dal/instance\";\n\nexport const cardsAPI = {\n    fetchCards(cardAnswer?: string, cardQuestion?: string, cardsPack_id?: string, min?: number, max?: number, sortCards?: number, page?: number, pageCount?: number) {\n        return instance.get<ResponseType>('cards/card', {params: {cardAnswer, cardQuestion, cardsPack_id, min, max, sortCards, page, pageCount}})\n    }\n}\n\nexport type CardType = {\n    answer: string\n    question: string\n    cardsPack_id: string\n    grade: number\n    rating: number\n    shots: number\n    type: string\n    user_id: string\n    created: string\n    updated: string\n    _v: number\n    _id: number\n}\n\ntype ResponseType = {\n    cards: Array<CardType>\n    cardsTotalCount: number\n    maxGrade: number\n    minGrade: number\n    page: number\n    pageCount: number\n    packUserId: string\n}\n","import {cardsAPI, CardType} from \"../dal/cards-api\";\n\ntype CardsStateType = {\n    cardsList: Array<CardType>\n    minGrade: number\n    maxGrade: number\n    page: number\n    pageCount: number\n    cardsTotalCount: number\n    cardAnswer: string\n    cardQuestion: string\n    cardsPack_id: string\n    sortCards: number\n}\nconst initialState: CardsStateType = {\n    cardsList : [],\n    minGrade : 0,\n    maxGrade : 100,\n    page : 1,\n    pageCount : 10,\n    cardsTotalCount : 0,\n    cardAnswer: \"\",\n    cardQuestion: \"\",\n    cardsPack_id: \"\",\n    sortCards: 0\n}\n\nexport const cardsReducer = (state: CardsStateType = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case \"SET_CARDS\": return {...state, cardsPack_id: action.packId, cardsList: action.cardsList}\n        case \"SET_CARD_TOTAL_COUNT\": return {...state, cardsTotalCount: action.cardsTotalCount}\n        default:\n            return state;\n    }\n}\n// Actions\n\nexport const setCardsListAC = (cardsList: Array<CardType>): SetCardsListActionType => ({\n    type : \"SET_CARDS\", packId: cardsList[0].cardsPack_id, cardsList\n} as const)\n\nexport const setCardsTotalCountAC = (cardsTotalCount: number): SetCardSTotalCountActionType => ({\n    type : 'SET_CARD_TOTAL_COUNT', cardsTotalCount\n} as const)\n\nexport const fetchCardsTC = (cardAnswer?: string, cardQuestion?: string, cardsPack_id?: string, min?: number, max?: number, sortCards?: number, page?: number, pageCount?: number) => (dispatch: any) => {\n    cardsAPI.fetchCards(cardAnswer, cardQuestion, cardsPack_id, min, max, sortCards, page, pageCount).then((res) => {\n        dispatch(setCardsListAC(res.data.cards))\n        dispatch(setCardsTotalCountAC(res.data.cardsTotalCount))\n    })\n}\n\nexport type SetCardsListActionType = {\n    type: 'SET_CARDS',\n    packId: string,\n    cardsList: Array<CardType>\n}\nexport type SetCardSTotalCountActionType = {\n    type: 'SET_CARD_TOTAL_COUNT',\n    cardsTotalCount: number\n}\n\ntype ActionsType = SetCardsListActionType | SetCardSTotalCountActionType\n\n","import React from \"react\";\nimport {CardType} from \"../../dal/cards-api\";\n\n\ntype CardPropsType = {\n    card: CardType\n    packId: string\n}\n\nconst Card: React.FC<CardPropsType> = (props) => {\n\n\n    return (\n        <>\n            <tr>\n                <td>{props.card.question}</td>\n                <td>{props.card.answer}</td>\n                <td>{props.card.grade}</td>\n                <td>{props.card.updated}</td>\n            </tr>\n\n        </>\n    );\n}\n\nexport default Card;\n","import React, {useEffect} from \"react\";\nimport style from \"./Cards.module.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../main/bll/store\";\nimport {CardType} from \"../dal/cards-api\";\nimport {fetchCardsTC} from \"../bll/cards-reducer\";\nimport Card from \"./Card/Card\";\n\nconst Cards = () => {\n    const dispatch = useDispatch()\n    const cards = useSelector<AppRootStateType, Array<CardType>>((state) => state.cards.cardsList)\n    const cardAnswer = useSelector<AppRootStateType, string>((state) => state.cards.cardAnswer)\n    const cardQuestion = useSelector<AppRootStateType, string>((state) => state.cards.cardQuestion)\n    const cardsPackId = useSelector<AppRootStateType, string>((state) => state.cards.cardsPack_id)\n    const min = useSelector<AppRootStateType, number>((state) => state.cards.minGrade)\n    const max = useSelector<AppRootStateType, number>((state) => state.cards.maxGrade)\n    const sortCards = useSelector<AppRootStateType, number>((state) => state.cards.sortCards)\n    const page = useSelector<AppRootStateType, number>((state) => state.cards.page)\n    const pageCount = useSelector<AppRootStateType, number>((state) => state.cards.pageCount)\n    useEffect(() => {\n        dispatch(fetchCardsTC(cardAnswer, cardQuestion, cardsPackId, min, max, sortCards, page, pageCount))\n    }, [])\n    return (\n        <div>\n            <h2>Cards</h2>\n            <div className={style.filtersContainer}>\n            {/*    <Search setFilteredResults={setFilteredResults}/>*/}\n            {/*    <Paginator totalItemsCount={cardPacksTotalCount}*/}\n            {/*               pageSize={pageCount}*/}\n            {/*               currentPage={page}*/}\n            {/*               onPageChanged={setPage}*/}\n            {/*               portionSize={10}*/}\n            {/*    />*/}\n            </div>\n            <table className={style.tableContainer}>\n                <tr className={style.tableHeaders}>\n                    <td>Question</td>\n                    <td>Answer</td>\n                    <td>Grade</td>\n                    <td>Updated</td>\n                    <button>Add</button>\n                </tr>\n                {cards.map((c) => {\n                    return <Card key={c._id}\n                                 card={c}\n                                 packId={c.cardsPack_id}\n\n                    />\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default Cards;\n","import React, {ChangeEvent} from \"react\";\nimport SuperInputText from \"../../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../../../main/ui/common/c3-SuperCheckbox/SuperCheckbox\";\nimport s from './Login.module.css'\n\ntype LoginType = {\n    onChangeHandlerEmail: (e: ChangeEvent<HTMLInputElement>) => void\n    onChangeHandlerPassword: (e: ChangeEvent<HTMLInputElement>) => void\n    onChangeHandlerRememberMe: (e: ChangeEvent<HTMLInputElement>) => void\n    onClickHandler:()=>void\n    error:string|null\n}\n\nfunction Login(props: LoginType) {\n    return (\n        <div className={s.formContainer}>\n            <div>SIGN IN</div>\n            <SuperInputText type={'email'} placeholder={'Enter email'} onChange={props.onChangeHandlerEmail}/>\n            <div><SuperInputText type={'password'} placeholder={'Password'} onChange={props.onChangeHandlerPassword}/>\n            </div>\n            <div><SuperCheckbox onChange={props.onChangeHandlerRememberMe}>Remember Me</SuperCheckbox></div>\n            {props.error&&<span className={s.error}>{props.error}</span>}\n            <div><SuperButton onClick={props.onClickHandler}>Sign In</SuperButton></div>\n        </div>\n\n    );\n}\n\nexport default Login;\n\n","import {instance} from \"../../../../main/dal/instance\";\n\nexport const loginAPI = {\n    login(email: string, password: string, rememberMe: boolean) {\n        const promise= instance.post(`auth/login`, {email, password, rememberMe})\n        return promise\n    },\n    logout() {\n        return instance.delete('auth/me')\n    }\n}\n","import {loginAPI} from \"../dal/login-api\";\nimport {AppThunk} from \"../../../../main/bll/store\";\n\nexport const SET_IS_LOGIN = 'SET-IS-LOGIN';\nexport const SET_ERROR = \"SET_ERROR\";\n\nexport type ActionsLoginType = ReturnType<typeof setLoginAC> | ReturnType<typeof setError>\ntype LoginStateType = {\n    user: UserType | {}\n    isLogin: boolean\n    error: string | null\n}\nexport type UserType = {\n    _id: string;\n    email: string;\n    name: string;\n    avatar?: string;\n    publicCardPacksCount: number; // количество колод\n    created: Date;\n    updated: Date;\n    isAdmin: boolean;\n    verified: boolean; // подтвердил ли почту\n    rememberMe: boolean;\n    error?: string;\n}\nconst initialState: LoginStateType = {\n    user: {},\n    isLogin: false,\n    error: null\n}\n\nexport const authReducer = (state: LoginStateType = initialState, action: ActionsLoginType): LoginStateType => {\n    switch (action.type) {\n        case \"SET_IS_LOGIN\":\n            return {\n                ...state,\n                ...action.payload\n            };\n        case \"SET_ERROR\": {\n            return {...state, error: action.error}\n        }\n        default:\n            return state\n    }\n}\nexport const setLoginAC = (payload: LoginStateType) => ({\n    type: 'SET_IS_LOGIN',\n    payload\n} as const)\nexport const setError = (error: string | null) => ({\n    type: \"SET_ERROR\",\n    error\n\n} as const)\n\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk =>\n    (dispatch) => {\n        loginAPI.login(email, password, rememberMe)\n            .then((response) => {\n                dispatch(setLoginAC({user: response.data, isLogin: true, error: null}))\n            })\n            .catch((e) => {\n                const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\n                dispatch(setError(error))\n            })\n\n    }\nexport const logout = (): AppThunk =>\n    (dispatch) => {\n        loginAPI.logout()\n            .then(response => {\n                dispatch(setLoginAC({user: {}, isLogin: false, error: null}))\n                alert(response.data.info)\n\n            })\n            .catch((e) => {\n                const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\n                alert(error)\n                dispatch(setError(error))\n            })\n\n    }\n\n\n\n\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\nimport Login from \"./Login\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {login} from \"../bll/auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {PATH} from \"../../../../main/ui/Routes\";\nimport s from './Login.module.css'\nimport {Logout} from \"./logaut/Logout\";\n\ntype LoginContainerType = {}\n\nfunction LoginContainer() {\n    const dispatch = useDispatch()\n\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\n    const isLogin = useSelector<AppRootStateType, boolean>((state) => state.login.isLogin)\n    const error = useSelector<AppRootStateType, string | null>((state) => state.login.error)\n    let onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n    }, [setEmail])\n    let onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.currentTarget.value)\n    }, [setPassword])\n    let onChangeHandlerRememberMe = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setRememberMe(e.currentTarget.checked)\n    }, [setRememberMe])\n    let onClickHandler = () => {\n        dispatch(login(email, password, rememberMe))\n    }\n\n    if (isLogin) {\n        return <Redirect to={PATH.PROFILE}/>\n    }\n\n    return (\n        <div>\n            <Login\n                onChangeHandlerEmail={onChangeHandlerEmail}\n                onChangeHandlerPassword={onChangeHandlerPassword}\n                onChangeHandlerRememberMe={onChangeHandlerRememberMe}\n                onClickHandler={onClickHandler}\n                error={error}\n            />\n            <span>\n                <NavLink className={s.text} to={PATH.REGISTRATION}>Registration</NavLink>\n                <NavLink className={s.text} to={PATH.RESET_PASSWORD}>   Forget password</NavLink>\n            </span>\n        </div>\n    )\n        ;\n}\n\nexport default LoginContainer;\n\n","import {instance} from \"../../../../main/dal/instance\";\n\nexport const registrationAPI = {\n    registerUser(email: string, password: string) {\n        const promise = instance.post('auth/register', {email, password});\n        return promise;\n    }\n}\n","import {Dispatch} from \"react\";\nimport {registrationAPI} from \"../dal/registration-api\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\n\ntype RegistrationStateType = {\n    isRegistered: boolean,\n    error: string | null\n}\nconst initialState: RegistrationStateType = {\n    isRegistered: false,\n    error: null\n}\n\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: ActionsType): RegistrationStateType => {\n    switch (action.type) {\n        case \"TOGGLE_IS_REGISTERED\": {\n            return {...state, ...action.payload}\n        }\n        case \"SET_ERROR\":{\n            return {...state, ...action.payload}\n        }\n        default:\n            return state;\n    }\n}\n\nexport const ToggleIsRegisteredAC = (isRegistered: boolean) => ({\n    type: \"TOGGLE_IS_REGISTERED\",\n    payload: {\n        isRegistered\n    }\n} as const)\n\nexport const SetErrorAC = (error: string | null) => ({\n    type: \"SET_ERROR\",\n    payload: {\n        error\n    }\n} as const)\n\n\nexport const RegisterUserTC = (email: string, password: string) => (dispatch: ThunkDispatch,  getState: () => AppRootStateType) => {\n    registrationAPI.registerUser(email, password)\n        .then((res) => {\n            dispatch(ToggleIsRegisteredAC(true))\n        }).catch((error) => {\n            dispatch(SetErrorAC(error.response.data.error))\n    })\n}\n\ntype ActionsType =\n    | ReturnType<typeof ToggleIsRegisteredAC>\n    | ReturnType<typeof SetErrorAC>\n\ntype ThunkDispatch = Dispatch<ActionsType>\n","import React from \"react\";\nimport SuperInputText from \"../../../../main/ui/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\nimport styles from \"./Registration.module.css\"\n\ntype RegistrationType = {\n    onEmailChange: (value: string) => void\n    onPasswordChange: (value: string) => void\n    registerUser: () => void\n    error: string | null\n}\n\nexport const Registration = (props: RegistrationType) => {\n\n    return (\n        <div className={styles.formContainer}>\n            Registration\n            <SuperInputText onChangeText={props.onEmailChange} type={\"email\"}/>\n            <SuperInputText onChangeText={props.onPasswordChange} type={\"password\"}/>\n            {props.error && <span className={styles.error}>{props.error}</span>}\n            <SuperButton onClick={props.registerUser}>Register</SuperButton>\n        </div>\n    );\n}\n\nexport default Registration;\n\n","import React, {useState} from \"react\";\nimport {RegisterUserTC} from \"../bll/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../../main/bll/store\";\nimport { Redirect } from \"react-router-dom\";\nimport Registration from \"./Registration\";\n\nexport const RegistrationContainer = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n    const isRegistered = useSelector<AppRootStateType, boolean>((state) => state.registration.isRegistered)\n    const error = useSelector<AppRootStateType, string | null>((state) => state.registration.error)\n\n    const onEmailChange = (value: string) =>  {\n        setEmail(value)\n    }\n    const onPasswordChange = (value: string) => {\n        setPassword(value)\n    }\n    const registerUser = () => {\n        dispatch(RegisterUserTC(email, password))\n    }\n\n    if (isRegistered) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <div>\n            <Registration onEmailChange={onEmailChange}\n                          onPasswordChange={onPasswordChange}\n                          registerUser={registerUser}\n                          error={error}\n            />\n        </div>\n\n    );\n}\n\nexport default RegistrationContainer;\n\n","import React from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport styles from './Routes.module.css'\n\nimport Error404 from \"./Header/error404/Error404\";\nimport Login from \"../../features/auth/login/ui/Login\";\nimport Profile from \"../../features/profile/ui/Profile\";\nimport Registration from \"../../features/auth/registration/ui/Registration\";\nimport ResetPassword from \"../../features/reset-password/ui/ResetPassword\";\nimport NewPassword from \"../../features/new-password/ui/NewPassword\";\nimport Test from \"../../features/test/ui/Test\";\nimport Packs from \"../../features/packs/ui/Packs\";\nimport Cards from \"../../features/cards/ui/Cards\";\nimport LoginContainer from \"../../features/auth/login/ui/LoginContainer\";\nimport RegistrationContainer from \"../../features/auth/registration/ui/RegistrationContainer\";\n\n\nexport const PATH = {\n    LOGIN : \"/login\",\n    REGISTRATION : \"/registration\",\n    PROFILE : \"/profile\",\n    RESET_PASSWORD : \"/reset-password\",\n    NEW_PASSWORD : \"/new-password\",\n    TEST : \"/test\",\n    PACKS : \"/packs\",\n    CARDS : \"/cards\"\n}\n\nfunction Routes() {\n    return (\n        <div className={styles.mainContainer}>\n            <Switch>\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.RESET_PASSWORD} render={() => <ResetPassword/>}/>\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\n                <Route path={PATH.TEST} render={() => <Test/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {logout} from \"../../bll/auth-reducer\";\n\nexport const Logout = () => {\n    let dispatch = useDispatch()\n    const onClickHandler = () => {\n        dispatch(logout())\n    }\n    return (\n        <div onClick={onClickHandler}>\n            Logout\n        </div>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from './Navbar.module.css'\nimport {PATH} from \"../../Routes\";\nimport {Logout} from \"../../../../features/auth/login/ui/logaut/Logout\";\n\ntype NavbarType = {\n    isCollapsed: boolean\n    setCollapsed: (isCollapsed: boolean) => void\n\n}\n\nfunction Navbar(props: NavbarType) {\n\n    const onClickItem = () => {\n        props.setCollapsed(true)\n    }\n//nya-admin@nya.nya1qazxcvBG\n    return (\n        <div className={props.isCollapsed ? classes.hidden : classes.menuContainer}>\n            <ul>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.LOGIN}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Login</NavLink>\n\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.REGISTRATION}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Registration</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.PROFILE}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Profile</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.RESET_PASSWORD}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Reset Password</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.NEW_PASSWORD}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>New Password</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.PACKS}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Packs</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to={PATH.TEST}\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Test</NavLink>\n                </li>\n                <li><NavLink to={PATH.LOGIN}><Logout/></NavLink></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React, {useState} from \"react\";\nimport classes from './Header.module.css'\nimport Navbar from \"./Navbar/Navbar\";\n\n\nfunction Header() {\n\n    const [isCollapsed, setCollapsed] = useState<boolean>(true)\n    const toggleMenu = () => {\n        setCollapsed(!isCollapsed)\n    }\n    return (\n        <div className={classes.menuContainer}>\n            <div className={classes.navbarContainer}>\n                <img onClick={toggleMenu}\n                     className={classes.menuIcon}\n                     src=\"https://upload.wikimedia.org/wikipedia/commons/b/b2/Hamburger_icon.svg\"\n                     alt=\"menu\"/>\n            </div>\n            <Navbar isCollapsed={isCollapsed} setCollapsed={setCollapsed}/>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport Routes from './Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter>\n            <Header />\n                <Routes />\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type ProfileActionType = {\n   type: string\n}\n\ntype ActionsType = ProfileActionType\ntype ProfileStateType = {\n}\nconst initialState: ProfileStateType = {}\n\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n","export type TestActionType = {\n   type: string\n}\n\ntype ActionsType = TestActionType\ntype TestStateType = {\n}\nconst initialState: TestStateType = {}\n\nexport const testReducer = (state: TestStateType = initialState, action: ActionsType): TestStateType => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {ActionsLoginType, authReducer} from \"../../features/auth/login/bll/auth-reducer\";\nimport {newPasswordReducer} from \"../../features/new-password/bll/new-password-reducer\";\nimport {profileReducer} from \"../../features/profile/bll/profile-reducer\";\nimport {resetPasswordReducer} from \"../../features/reset-password/bll/reset-password-reducer\";\nimport {testReducer} from \"../../features/test/bll/test-reducer\";\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport {packsReducer} from \"../../features/packs/bll/packs-reducer\";\nimport {cardsReducer} from \"../../features/cards/bll/cards-reducer\";\nimport {registrationReducer} from \"../../features/auth/registration/bll/registration-reducer\";\n\nconst rootReducer = combineReducers({\n        login: authReducer,\n        registration: registrationReducer,\n        newPassword: newPasswordReducer,\n        profile: profileReducer,\n        resetPassword: resetPasswordReducer,\n        test: testReducer,\n        packs: packsReducer,\n        cards: cardsReducer\n})\n\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\ntype AppActionType=ActionsLoginType\nexport type AppRootStateType = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionType>\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./main/bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"Navbar_hidden__1Owsh\",\"menuContainer\":\"Navbar_menuContainer__UY_AR\",\"highlight\":\"Navbar_highlight__3_JIP\"};"],"sourceRoot":""}